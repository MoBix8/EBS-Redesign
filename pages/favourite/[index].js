import { useRouter } from "next/router";
import { Background } from "../../components/shows/Background";
import Head from 'next/head';
import Favourite from "../../utils/favourite";
import Contents from "../../components/shows/Contents";

export async function getStaticPaths() {
    return {
        paths: [
          { params: { index: "0" } },
           { params: { index: "1" } },
           { params: { index: "2" } },
           { params: { index: "3" } },
           { params: { index: "4" } },
           { params: { index: "5" } },
           { params: { index: "6" } },
           { params: { index: "7" } },
          ],
        fallback: false
    };
}


export async function getStaticProps(context){
  const MY_PLAYLIST_1 = process.env.YOUTUBE_PLAYLIST_ID_1;
  const MY_PLAYLIST_2 = process.env.YOUTUBE_PLAYLIST_ID_2;
  const MY_PLAYLIST_3 = process.env.YOUTUBE_PLAYLIST_ID_3;
  const MY_PLAYLIST_4 = process.env.YOUTUBE_PLAYLIST_ID_4;
  const MY_PLAYLIST_5 = process.env.YOUTUBE_PLAYLIST_ID_5;
  const MY_PLAYLIST_6 = process.env.YOUTUBE_PLAYLIST_ID_6;
  const MY_PLAYLIST_7 = process.env.YOUTUBE_PLAYLIST_ID_7;
  
  const API_KEY = process.env.YOUTUBE_API_KEY;
  const PLAYLIST_REQUEST_URL_1 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_1}&key=${API_KEY}`;
  const PLAYLIST_REQUEST_URL_2 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_2}&key=${API_KEY}`;
  const PLAYLIST_REQUEST_URL_3 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_3}&key=${API_KEY}`;
  const PLAYLIST_REQUEST_URL_4 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_4}&key=${API_KEY}`;
  const PLAYLIST_REQUEST_URL_5 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_5}&key=${API_KEY}`;
  const PLAYLIST_REQUEST_URL_6 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_6}&key=${API_KEY}`;
  const PLAYLIST_REQUEST_URL_7 = `https://youtube.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=500&playlistId=${MY_PLAYLIST_7}&key=${API_KEY}`;

  const playlistResponse1 = await fetch(PLAYLIST_REQUEST_URL_1);
  const playlistResponse2 = await fetch(PLAYLIST_REQUEST_URL_2);
  const playlistResponse3 = await fetch(PLAYLIST_REQUEST_URL_3);
  const playlistResponse4 = await fetch(PLAYLIST_REQUEST_URL_4);
  const playlistResponse5 = await fetch(PLAYLIST_REQUEST_URL_5);
  const playlistResponse6 = await fetch(PLAYLIST_REQUEST_URL_6);
  const playlistResponse7 = await fetch(PLAYLIST_REQUEST_URL_7);

  const playlistResult1 = await playlistResponse1.json();
  const playlistResult2 = await playlistResponse2.json();
  const playlistResult3 = await playlistResponse3.json();
  const playlistResult4 = await playlistResponse4.json();
  const playlistResult5 = await playlistResponse5.json();
  const playlistResult6 = await playlistResponse6.json();
  const playlistResult7 = await playlistResponse7.json();


  return{
    props:{
       results: [playlistResult1,
        playlistResult2,
        playlistResult3,
        playlistResult4,
        playlistResult5,
        playlistResult6,
        playlistResult7,]
    },
    revalidate: 3600,
  }
}

export default function TvShows({results}) {
    const router = useRouter();
    const { index } = router.query;
    
    //console.log(results[index]);
    return <div>
      <Head>
        <title>{Favourite[Number(index-1)]?.title} |  </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Background result={result} image={image} index={index} /> */}
      <Background image={Favourite[Number(index-1)]?.img} index={index-1} />
      <div className='cursor-default px-10'>
        <div className=' text-xl pt-5 pb-5'>vcgdks</div>
        <Contents result={results[index-1]} index={index-1}/>
      </div>
    </div>;
}






// import Link from "next/link";
// import Favourite from "../../utils/Favourite";

// export default function TvShow(props) {
//   return (
//     <>
//       <pre>{JSON.stringify(props.tvShow, null, 2)}</pre>
//       <Link href="/">Go back to the homepage</Link>
//     </>
//   );
// }
// export async function getStaticPaths() {
//   return {
//     paths: Favourite.map((item) => {
//       return {
//         params: {
//           id: String(item.id)
//         }
//       };
//     }),
//     fallback: false
//   };
// }
// export async function getStaticProps(context) {
//   const tvShowId = context.params.id;
//   const tvShow = Favourite.find((_tvShow) => String(_tvShow.id) === tvShowId);
//   return {
//     props: {
//       tvShow
//     }
//   };
// }
